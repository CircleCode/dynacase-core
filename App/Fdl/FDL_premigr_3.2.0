#!/bin/bash

if [ -z "$pgservice_core" ]; then
	echo "Undefined or empty pgservice_core!"
	exit 1
fi

"$wpub/wsh.php" --api=updateclass --appc=FDL --class=DocPermExt
RET=$?
if [ $RET -ne 0 ]; then
    echo "Error updating class docpermext."
    exit $RET
fi

PGSERVICE="$pgservice_core" psql --set ON_ERROR_STOP=on -f - <<EOF
BEGIN;
DROP SCHEMA family CASCADE;
ALTER TABLE doc ALTER COLUMN usefor TYPE text;
CREATE SCHEMA family;
ALTER TABLE docread ALTER COLUMN usefor TYPE text;
COMMIT;
EOF
RET=$?
if [ $RET -ne 0 ]; then
    echo "Error upgrading 'usefor' columns to type 'text'."
    exit $RET
fi


echo "change old attribute syntax type enumlist, textlist"
PGSERVICE="$pgservice_core" psql -t -c "update docattr set type= 'enum' where type='enumlist' and docid < 200;"
PGSERVICE="$pgservice_core" psql -t -c "update docattr set type= 'text' where type='textlist' and docid < 200;"


PGSERVICE="$pgservice_core" psql -t -c "update users set accounttype='U' where accounttype is null and (isgroup is null or isgroup != 'Y');"
PGSERVICE="$pgservice_core" psql -t -c "update users set accounttype='G' where accounttype is null and isgroup = 'Y';"
PGSERVICE="$pgservice_core" psql -t -c "update doc128 set us_passwd=null;"
PGSERVICE="$pgservice_core" psql -t -c "ALTER TABLE doc128 NO INHERIT doc120;"
PGSERVICE="$pgservice_core" psql -t -c "ALTER TABLE doc128 INHERIT doc;"
PGSERVICE="$pgservice_core" psql -t -c "update docfam set fromid=0 where id=128;"
PGSERVICE="$pgservice_core" psql -t -c "drop TRIGGER tinitacl on docperm;"
PGSERVICE="$pgservice_core" psql -f "$wpub/FDL/fdl.sql"

# Delete parasite parameters
"$wpub/wsh.php" --api=cleanFamilyParameter
RET=$?
if [ $RET -ne 0 ]; then
    echo "Error executing cleanFamilyParameter."
    exit $RET
fi

#
# Delete deprecated default values
#
PGSERVICE="$pgservice_core" psql -t -c "delete from docattr where docid < 1000 and id = 'us_iddomain';"
PGSERVICE="$pgservice_core" psql -t -c "delete from docattr where docid < 1000 and id = 'us_domain';"
PGSERVICE="$pgservice_core" psql -t -c "delete from docattr where docid < 1000 and id = 'us_passwd';"
PGSERVICE="$pgservice_core" psql -t -c "UPDATE docfam set defval=replace(defval, '[us_iddomain|0]', '') where id < 1000 and defval ~ 'us_iddomain';"
PGSERVICE="$pgservice_core" psql -t -c "UPDATE docfam set defval=replace(defval, '[us_iddomain|1]', '') where id < 1000 and defval ~ 'us_iddomain';"
PGSERVICE="$pgservice_core" psql -t -c "UPDATE docfam set defval=replace(defval, '[us_domain|local]', '') where id < 1000 and defval ~ 'us_domain';"
PGSERVICE="$pgservice_core" psql -t -c "UPDATE docfam set defval=replace(defval, '[us_domain|externe]', '') where id < 1000 and defval ~ 'us_domain';"

#
# Delete attributes referencing old non-existing frames
#
PGSERVICE="$pgservice_core" psql -f - <<EOF
-- Delete attributes referencing old frames
DELETE FROM docattr WHERE (docid BETWEEN 120 AND 1000) AND id IN ('us_service', 'us_idservice') AND frameid = 'us_fr_soc';
DELETE FROM docattr WHERE (docid BETWEEN 120 AND 1000) AND id IN ('us_extmail', ':us_mail', ':us_lname', ':us_fname') AND frameid = 'us_fr_ident';
-- Delete old frames
DELETE FROM docattr WHERE (docid BETWEEN 120 AND 1000) AND id IN ('us_privcard', 'us_fr_ident');
-- Remove defaut values on non-existing attributes
UPDATE docfam SET defval = replace(defval, '[us_privcard|W]', '') WHERE id < 1000;
EOF

CURRENT_DATABASE=`PGSERVICE="$pgservice_core" psql -tA -c "SELECT current_database()"`
if [ -z "$CURRENT_DATABASE" ]; then
    echo "Could not get current_database from PGSERVICE=$pgservice_core"
    exit 1
fi
PGSERVICE="$pgservice_core" psql -c "ALTER DATABASE \"$CURRENT_DATABASE\" SET standard_conforming_strings = 'off'"
RET=$?
if [ $RET -ne 0 ]; then
    echo "Error setting standard_conforming_strings to 'off' on current database \"$CURRENT_DATABASE\""
    exit $RET
fi
