<?php


include_once("FDL[GEN]/Class.[DocParent1].php");
[include]
Class ADoc[docid] extends [AParent] {
    // for familly : [title]

   function __construct () {
      [AParent]::__construct();

     [BLOCK AATTR]
     $this->attr["[attrid]"]=new ActionAttribute("[attrid]", "[docid]","[label]",[order],"[visibility]","[wapplication]","[waction]","[precond]","[options]","[docName]");    
     [ENDBLOCK AATTR]
     [BLOCK MATTR]
     $this->attr["[attrid]"]=new MenuAttribute("[attrid]", "[docid]","[label]",[order],"[link]","[visibility]","[precond]","[options]","[docName]");    
     [ENDBLOCK MATTR]
     [BLOCK FATTR]
     $this->attr["[attrid]"]=new FieldSetAttribute("[attrid]", "[docid]","[label]","[visibility]","[usefor]","[type]",$this->attr["[frame]"],"[options]","[docName]");
     [ENDBLOCK FATTR]
     [BLOCK NATTR]
     $this->attr["[attrid]"]=new NormalAttribute("[attrid]", "[docid]","[label]","[type]","[format]",[repeat],[order],"[link]",
                                                "[visibility]",[needed],[title],[abstract],
						$this->attr["[frame]"],"[phpfile]","[phpfunc]","[elink]","[phpconstraint]","[usefor]","[eformat]","[options]","[docName]");

     [ENDBLOCK NATTR]
     $this->fromids[[docid]]=[docid];
     $this->fromname='[docName]';
[BLOCK ATTRFIELD]
    $this->fields["[attrid]"]="[attrid]";[ENDBLOCK ATTRFIELD]
   }
}

     [BLOCK INDIRECT]
// redirect class : to simulate double inherit
Class [docNameIndirect] extends [RedirectDocParent] {
   [METHODS2]
}
     [ENDBLOCK INDIRECT]
Class _[PHPclassName] extends [DocParent] {
   //  family : [title]

   public $dbtable="doc[docid]";
   public $dbseq="seq_doc[docid]";
   public $sqlcreate = array("create table doc[docid] ([sattr]) inherits (doc[fromid]);",
     "create sequence seq_doc[docid] start 1;",
     "alter TABLE doc[docid] ADD primary key (id);",
     "select setval('seq_doc[docid]', count(distinct initid)+1, false )  from only doc[docid];");
   

     public $fromid=[docid];
     public $fromname='[docName]';
     public $fromtitle="[docTitle]";

   function __construct ($dbaccess='', $id='',$res='',$dbid=0) {
    $this->attributes = new ADoc[docid]();
    

    if (isset($this->attributes->fields))  $this->fields += $this->attributes->fields;
    [pinit]::__construct($dbaccess, intval($id), $res, $dbid);

     $this->postConstructor();
//    uasort($this->attributes->attr,"tordered"); 
       
   }

   function SpecRefreshGen($onlyspec=false) {
     $err = parent::SpecRefreshGen();
[BLOCK ACALC]
  $oAttr="[callattr]";
       $callMethod="[callmethod]";
  $ca=$this->getAttribute($oAttr);
  if (! $ca) throw new Exception(ErrorCode::getError('ATTR1212',$callMethod, $this->fromname));
  if ($ca->inArray()) {
      $this->completeArrayRow($ca->fieldSet->id);
      $t=$this->getTValue($oAttr);
      foreach ($t as $k=>$v) {
          $err.=$this->setValue($oAttr, $this->applyMethod($callMethod,'',$k),$k);
      }
  } else {
    $err.=$this->setValue($oAttr, $this->applyMethod($callMethod));
  }
[ENDBLOCK ACALC]
       
       return $err;
   }
   
   [METHODS]

}

     [BLOCK CLASSALIAS]
// alias name for the class
Class Doc[docid] extends  _[PHPclassName]{
}
     [ENDBLOCK CLASSALIAS]

?>
